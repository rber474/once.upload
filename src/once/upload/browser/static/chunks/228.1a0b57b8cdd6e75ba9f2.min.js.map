{"version":3,"file":"chunks/228.1a0b57b8cdd6e75ba9f2.min.js","mappings":"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","sources":["webpack://upload/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://upload/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://upload/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://upload/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://upload/./node_modules/@patternslib/patternslib/src/core/registry.js"],"sourcesContent":["/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = {};\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map[el]) {\n        event_listener_map[el] = {};\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            delete event_listener_map[el][id];\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map[el][id] = [event_type, _cb, opts.capture ? opts : undefined];\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} id - A unique id under which the event is registered.\n *\n */\nconst remove_event_listener = (el, id) => {\n    if (!el?.removeEventListener) {\n        return; // nothing to do.\n    }\n    const el_events = event_listener_map[el];\n    if (!el_events) {\n        return;\n    }\n    let entries;\n    if (id) {\n        // remove event listener with specific id\n        const entry = el_events[id];\n        entries = entry ? [entry] : [];\n    } else {\n        // remove all event listeners of element\n        entries = Object.entries(el_events);\n    }\n    for (const entry of entries || []) {\n        el.removeEventListener(entry[0], entry[1], entry[2]);\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = () => {\n    return new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        let matcher = classes.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        matcher = matcher.replace(/[*]/g, \".*\");\n        matcher = new RegExp(\"^\" + matcher + \"$\");\n\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} postpone - If true, the function will be called after it stops being called for N milliseconds.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n"],"names":["root","writer","Function","prototype","bind","oThis","this","TypeError","aArgs","Array","slice","call","arguments","fToBind","fNOP","fBound","apply","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","name","parent","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","unshift","console","log","info","warn","error","getLogger","path","split","route","length","entry","shift","push","join","_getFlag","flag","context","undefined","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","debug","fatal","match","logconfig","exec","window","location","search","getWriter","event_listener_map","remove_event_listener","el","id","removeEventListener","el_events","entries","Object","add_event_listener","event_type","cb","opts","addEventListener","_cb","once","e","capture","await_event","event_name","Promise","resolve","await_pattern_init","pattern","reject","one","target","catch","Error","blur_event","Event","bubbles","cancelable","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","dragstart_event","dragend_event","logger","logging","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","value","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","get_relative_position","reference_el","document","body","left","abs","getBoundingClientRect","scrollLeft","dom","top","scrollTop","toNodeArray","nodes","jquery","NodeList","querySelectorAllAndMe","selector","all","querySelectorAll","matches","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","closest","find_scoped","indexOf","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","overflow_y","includes","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","options","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","get_data","default_value","set_data","delete_data","template","template_string","template_variables","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","max","escape_css_id","CSS","escape","events","$","safeClone","clone","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","each","pat","$el","init","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","isElementInViewport","partial","rec","right","every","documentElement","clientHeight","innerWidth","clientWidth","utils","jqueryPlugin","escapeRegExp","str","replace","extend","source","prop","i","hasOwnProperty","findLabel","input","$label","label","nodeType","tagName","form","removeWildcardClass","targets","classes","ensureArray","classList","remove","matcher","RegExp","class_list","ok","filter","it","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","add","trigger","action","t","easing","complete","addURLQueryParameter","fullURL","param","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","keys","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","amount","parseLength","reference_length","findRelatives","$relatives","$form","find","get_bounds","bounds","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","setTimeout","debounce","func","timer","postpone","last_run","args","Date","now","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","sort","is_option_truthy","option","getCSSValue","elementInViewport","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","ready","scan","clear","transformPattern","content","transform","initPattern","plog","orderPatterns","splice","querySelector","Text","selectors","map","reverse","register","jquery_plugin","plugin_name","p1"],"sourceRoot":""}